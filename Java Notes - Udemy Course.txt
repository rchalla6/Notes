- keywords are case sensitive - public and Public and even PUBLIC are different
- sout - shortcut for the System.out.println
- 8 primitive types of Jave - boolean, byte, char, short, int, long, float, double
- Precision refers to the format and amount of space occupied by the type. Single precision occupies 32 bits (for float) and a double precison occupies 64 bits (for double)
- Default type for whole numbers is int and for real numbers is double
- datatype doesnot fall under expression, everything after datatype will be considered as an expression
	variables, values and operators
- Changing return type will not be considered as method overloading
- super is used to intialize the parent class in the child class
- super is used to access/call the parent class members(variables and methods) whereas this is used to access/call the current class members(variables and methods)
- overloading does not have anything to do with polymorphism, but java developers often refer to overloading as compile time polymorphism
- Method overriding is also known as Runtime Polymorphism and Dynamic Method Dispatch, because the method that is going to be called is decided at runtime by the JVM
- We can't override static methods only instance methods
- Method overloading rule - child class method can't have a lower access modifier than the parent class method
- only inherited methods can be overwritten, in other words methods can be overridden only in child classes
- constructors and private methods cannot be overridden
- Methods that are final cannot be overridden
- In method overriding, we must have the same return type or covariant return type (child class)
- In static methods, we can't use the this keyword
- Static variables are shared across all the instances of the class, if you change in one instance it will be affected in all the instances of the classes.
- The default values of numeric array elements are set to 0

Collection FrameWorks:

- We cannot store primitive type values in the arrayList. 
	ArrayList<String> stringArrayList = new ArrayList<String>() - Works
	ArrayList<int> stringArrayList = new ArrayList<int>() - Error
- We can use wrapper classes to store the primitive type values
- Autoboxing - Converting primitive value to the wrapper class
- Unboxing - Converting wrapper class valut to the primitive type

Inner Classes:

- Two types of inner classes - local classes, anonymous classes
- 
	